function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    Base.precompile(Tuple{Core.kwftype(typeof(CSV.Type)),NamedTuple{(:debug,),Tuple{Bool}},Type{CSV.File},CSV.Header{false,Parsers.Options{false,false,true,false,Missing,UInt8,Nothing},Array{UInt8,1}}})
    Base.precompile(Tuple{Type{CSV.File},String})
    Base.precompile(Tuple{Type{CSV.Header{false,Parsers.Options{false,false,true,false,Missing,UInt8,Nothing},Array{UInt8,1}}},String,Array{Symbol,1},Int64,Int64,UInt8,Array{UInt8,1},Int64,Int64,Int64,Parsers.Options{false,false,true,false,Missing,UInt8,Nothing},Nothing,Array{Int64,1},Array{Type,1},Array{UInt8,1},Array{Int64,1},Float64,Bool,Type{T} where T})
    Base.precompile(Tuple{typeof(CSV.detectcolumnnames),Array{UInt8,1},Int64,Int64,Int64,Parsers.Options{false,false,true,false,Missing,UInt8,Nothing},Int64,Bool})
    Base.precompile(Tuple{typeof(CSV.makechain),Type{Array{Union{Missing, Bool},1}},Array{Union{Missing, Bool},1},Int64,Int64,Array{Array{AbstractArray{T,1} where T,1},1},Int64})
    Base.precompile(Tuple{typeof(CSV.multithreadparse),Array{Type,1},Array{UInt8,1},Array{UInt8,1},Int64,Int64,Parsers.Options{false,false,true,false,Missing,UInt8,Nothing},Nothing,Int64,Int64,Float64,Array{CSV.RefPool,1},Int64,Dict{Type,Type},Bool,Type{T} where T,Int64,Int64,Bool})
    Base.precompile(Tuple{typeof(CSV.parsefilechunk!),Val{false},Int64,Dict{Type,Type},Array{AbstractArray{T,1} where T,1},Array{UInt8,1},Int64,Int64,Int64,Array{Int64,1},Float64,Array{CSV.RefPool,1},Int64,Int64,Array{Type,1},Array{UInt8,1},Bool,Parsers.Options{false,false,true,false,Missing,UInt8,Nothing},Nothing,Type{Tuple{}},Int})
    Base.precompile(Tuple{typeof(CSV.promote_types),Any,Any})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,Array{Union{Missing, Bool},1}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,ChainedVector{Union{Missing, Bool},Array{Union{Missing, Bool},1}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,PooledArrays.PooledArray{Union{Missing, String},UInt32,1,Array{UInt32,1}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,PooledArrays.PooledArray{Union{Missing, String},UInt32,1,ChainedVector{UInt32,Array{UInt32,1}}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Dates.Date,1,Dates.Date,Missing,Array{Dates.Date,1}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Dates.Date,1,Dates.Date,Missing,ChainedVector{Dates.Date,Array{Dates.Date,1}}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Dates.DateTime,1,Dates.DateTime,Missing,Array{Dates.DateTime,1}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Dates.DateTime,1,Dates.DateTime,Missing,ChainedVector{Dates.DateTime,Array{Dates.DateTime,1}}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Dates.Time,1,Dates.Time,Missing,Array{Dates.Time,1}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Dates.Time,1,Dates.Time,Missing,ChainedVector{Dates.Time,Array{Dates.Time,1}}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Float64,1,Float64,Missing,Array{Float64,1}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Float64,1,Float64,Missing,ChainedVector{Float64,Array{Float64,1}}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Int64,1,Int64,Missing,Array{Int64,1}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{Int64,1,Int64,Missing,ChainedVector{Int64,Array{Int64,1}}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{String,1,UndefInitializer,Missing,Array{String,1}}}})
    isdefined(CSV, Symbol("#28#29")) && Base.precompile(Tuple{getfield(CSV, Symbol("#28#29")),Tuple{Symbol,SentinelArray{String,1,UndefInitializer,Missing,ChainedVector{String,Array{String,1}}}}})
    isdefined(CSV, Symbol("#34#39")) && Base.precompile(Tuple{getfield(CSV, Symbol("#34#39"))})
    isdefined(CSV, Symbol("#36#41")) && Base.precompile(Tuple{getfield(CSV, Symbol("#36#41"))})
end
