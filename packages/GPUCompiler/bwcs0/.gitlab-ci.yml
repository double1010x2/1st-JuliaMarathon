include:
  - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v6.yml'


# LLVM with assertions

asserts:1.3:
  extends:
    - .julia:source
    - .test
  variables:
    CI_CLONE_ARGS: '-b v1.3.1'
    CI_BUILD_ARGS: 'BINARYBUILDER_LLVM_ASSERTS=1 LLVM_BB_URL_BASE=https://github.com/staticfloat/LLVMBuilder/releases/download/v6.0.1-7+nowasm/'
  variables:
    CI_ASSERTS: 'true'

asserts:1.4:
  extends:
    - .julia:source
    - .test
  variables:
    CI_CLONE_ARGS: '-b v1.4.0'
    CI_BUILD_ARGS: 'BINARYBUILDER_LLVM_ASSERTS=1'
  variables:
    CI_ASSERTS: 'true'


# CUDAnative.jl

.test_cudanative:
  extends: .test
  image: ubuntu:bionic
  variables:
    NVIDIA_VISIBLE_DEVICES: 'all'
    NVIDIA_DRIVER_CAPABILITIES: 'all'
  script:
    - julia -e 'using Pkg;
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.build();'
    - julia -e 'using Pkg;
                Pkg.add(PackageSpec(name="CUDAnative", rev="master"));
                Pkg.test("CUDAnative");'

cudanative:1.3:
  extends:
    - .julia:1.3
    - .test_cudanative
  tags:
    - nvidia

cudanative:1.4:
  extends:
    - .julia:1.4
    - .test_cudanative
  tags:
    - nvidia


# AMDGPUnative.jl

# .test_amdgpunative:
#   extends: .test
#   image: rocm/dev-ubuntu-18.04
#   script:
#     - julia -e 'using Pkg;
#                 Pkg.develop(PackageSpec(path=pwd()));
#                 Pkg.build();'
#     - julia -e 'using Pkg;
#                 Pkg.add(PackageSpec(name="AMDGPUnative", rev="jps/gpucompiler"));
#                 Pkg.test("AMDGPUnative");'

# amdgpunative:1.3:
#   extends:
#     - .julia:1.3
#     - .test_amdgpunative
#   tags:
#     - rocm

# amdgpunative:1.4:
#   extends:
#     - .julia:1.4
#     - .test_amdgpunative
#   tags:
#     - rocm


# other tasks

coverage:
  extends:
    - .julia:1.4
    - .coverage
